version: '3'

services:


  cassandra:
    container_name: cassandra
    image: cassandra:3.11.4
    #    volumes:
    #      - "./cassandra-init.sh:/cassandra-init.sh"
    #    command: "sh /cassandra-init.sh"
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]


  redis_service:
    container_name: redis_service
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ../data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  prediction_server:
    container_name: prediction_server
    build: ./prediction_server
    volumes:
      - ./prediction_server:/usr/src/app
    depends_on:
      - cassandra
      - cassandra_api
    command: ["./wait-for-it.sh", "cassandra:9042", "cassandra_api:8764", "--", "python", "prediction_api.py"]

    ports:
      - 5000:5000

  cassandra_api:
    container_name: cassandra_api
    build: ./cassandra_api
    volumes:
      - ./cassandra_api:/usr/src/app
    depends_on:
      - cassandra
    command: ["./wait-for-it.sh", "cassandra:9042", "--", "python", "cassandra_api.py"]

    ports:
      - 8764:8764

#  worker:
#    image: engineeringthesis_prediction_server:latest
#    command: rq worker --url redis://redis_service:6379 queue_update_model
#    depends_on:
#      - redis_service
#    links:
#      - redis_service

  data_provider:
    container_name: data_provider
    build: data_provider
    volumes:
      - ./data_provider:/usr/src/app
    ports:
      - 8765:8765

  evaluation_server:
    container_name: evaluation_server
    build: ./evaluation_server
    volumes:
      - ./evaluation_server:/usr/src/app
    depends_on:
      - cassandra
    command: ["./wait-for-it.sh", "cassandra:9042", "--", "python", "evaluation_server.py"]
    ports:
      - 8766:8766
    stdin_open: true
    tty: true

